{"ast":null,"code":"var _jsxFileName = \"/Users/Dia/Desktop/favielist/src/Lists.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, React } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists() {\n  _s();\n\n  const KEY = 'ac733e4361119585d5f69a529226d016';\n  const targetDate = '20220917';\n  const [data, setData] = useState([]); //     const getPosterImg = (title) =>{\n  //         const posterImg = {\n  //             url:'/v1/search/movie.json',\n  //             method:'GET',\n  //             params:{\n  //                 query: `${title}`\n  //             },\n  //             headers: {\n  //                 'X-Naver-Client-Id': \"rkuFsJw7BejTzImF1dlV\",\n  //                 'X-Naver-Client-Secret': \"vjda43t2Pd\"\n  //             }\n  //         }\n  //         axios(posterImg)\n  //         .then(function(response){\n  //             let results = response.data.items[0].image;\n  //             return results;   \n  //         })\n  //         .catch(function(){\n  //             console.log('Fail to Loading..');\n  //         })\n  //         .finally(function(){\n  //             console.log('Done!');\n  //         })\n  //       }\n  // 3TQUJ190J8IEK4637NY3\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [range, setRange] = useState(\"\");\n  const key1 = '3e56c5d518bc82f65d4d1d16806fdd37';\n  const key2 = 'G3O5TIC12LVI911FTE84';\n  const yesterday = new Date(new Date() - 86400000);\n  const lastweek = new Date(new Date() - 86400000 * 7);\n  let targetDT1 = yesterday.getFullYear() + (yesterday.getMonth() + 1).toString().padStart(2, 0) + yesterday.getDate().toString().padStart(2, 0);\n  let targetDT2 = lastweek.getFullYear() + (lastweek.getMonth() + 1).toString().padStart(2, 0) + lastweek.getDate().toString().padStart(2, 0);\n  useEffect(() => {\n    const getMovies = async movie => {\n      const json = await (await fetch(`http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&detail=Y&title=${movie.movieNm}&releaseDts=${movie.openDt.replaceAll(\"-\", \"\")}&ServiceKey=${key2}`)).json();\n      return {\n        \"title\": movie.movieNm,\n        \"rnum\": movie.rnum,\n        \"rank\": movie.rank,\n        \"openDt\": movie.openDt,\n        \"audiCnt\": movie.audiCnt,\n        \"audiAcc\": movie.audiCnt,\n        \"posters\": json.Data[0].Result[0].posters,\n        \"kmdbURL\": json.Data[0].Result[0].kmdbUrl\n      };\n    };\n\n    const getBoxOffice = async () => {\n      const response = await (await (await fetch(apiType === \"Daily\" ? `https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${key1}&targetDt=${targetDT1}` : `https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchWeeklyBoxOfficeList.json?key=${key1}&weekGb=0&targetDt=${targetDT2}`)).json()).boxOfficeResult;\n      setRange(response.showRange);\n      const boxOffice = apiType === \"Daily\" ? await response.dailyBoxOfficeList.map(movie => getMovies(movie)) : await response.weeklyBoxOfficeList.map(movie => getMovies(movie));\n      await Promise.all(boxOffice).then(result => {\n        setMovies(result);\n        setLoading(false);\n      }).catch();\n    };\n\n    getBoxOffice();\n  }, [targetDT1, targetDT2, apiType]); // useEffect(() => {\n  //     const getMovies = async (movie) => {\n  //         const json = await (\n  //             await fetch(\n  //                 `/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&detail=Y&title=${movie.movieNm}&releaseDts=${movie.openDt.replaceAll(\"-\",\"\")}&ServiceKey=3TQUJ190J8IEK4637NY3`\n  //             )\n  //         ).json();\n  //         return {\n  //             \"title\": movie.movieNm,\n  //             \"rank\": movie.rank,\n  //             \"openDt\": movie.openDt,\n  //             \"audiCnt\": movie.audiCnt,\n  //             \"audiAcc\": movie.audiCnt,\n  //             \"posters\":json.Data[0].Result[0].posters,\n  //             \"kmdbURL\":json.Data[0].Result[0].kmdbUrl\n  //         };\n  //     }\n  //     const getBoxOffice = async() => {\n  //         const response = await(await (\n  //             await fetch(\n  //                 `https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`\n  //             )\n  //         ).json()).boxOfficeResult.dailyBoxOfficeList;\n  //         setData(response);\n  //         const boxOffice = await(response.map((movie) => getMovies(movie)));\n  //         await Promise.all(boxOffice).then((result) => {\n  //             console.log(result);\n  //             console.log(boxOffice);\n  //         });\n  //     }\n  //     getBoxOffice();\n  // }, []);\n  //   useEffect(() => {\n  //     const getMovies = async () => {\n  //       try {\n  //         const response = await axios.get(\n  //           `http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`\n  //         );\n  //         console.log(response.data.boxOfficeResult.dailyBoxOfficeList);\n  //         setData(response.data.boxOfficeResult.dailyBoxOfficeList);\n  //       } catch (e) {\n  //         console.log(e);\n  //       }\n  //     };\n  //     getMovies();\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"px-[40px] pt-[25px] grid grid-cols-5 gap-10\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"w-fit\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.posters.split(\"|\")[0],\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.movieNm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.openDt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2605 8.5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n} // export default React.memo(Lists);\n\n_s(Lists, \"Ni5sZaWLCkCgYpjXPj5UozhJCdo=\");\n\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["useEffect","useState","React","axios","Lists","KEY","targetDate","data","setData","loading","setLoading","movies","setMovies","range","setRange","key1","key2","yesterday","Date","lastweek","targetDT1","getFullYear","getMonth","toString","padStart","getDate","targetDT2","getMovies","movie","json","fetch","movieNm","openDt","replaceAll","rnum","rank","audiCnt","Data","Result","posters","kmdbUrl","getBoxOffice","response","apiType","boxOfficeResult","showRange","boxOffice","dailyBoxOfficeList","map","weeklyBoxOfficeList","Promise","all","then","result","catch","item","split"],"sources":["/Users/Dia/Desktop/favielist/src/Lists.js"],"sourcesContent":["import { useEffect,useState, React  } from 'react';\nimport axios from 'axios';\n\n\nexport default function Lists() {\n    const KEY = 'ac733e4361119585d5f69a529226d016';\n    const targetDate = '20220917';\n    const[data,setData]=useState([]);\n  \n//     const getPosterImg = (title) =>{\n//         const posterImg = {\n//             url:'/v1/search/movie.json',\n//             method:'GET',\n//             params:{\n//                 query: `${title}`\n//             },\n//             headers: {\n//                 'X-Naver-Client-Id': \"rkuFsJw7BejTzImF1dlV\",\n//                 'X-Naver-Client-Secret': \"vjda43t2Pd\"\n//             }\n//         }\n//         axios(posterImg)\n//         .then(function(response){\n//             let results = response.data.items[0].image;\n//             return results;   \n//         })\n//         .catch(function(){\n//             console.log('Fail to Loading..');\n//         })\n//         .finally(function(){\n//             console.log('Done!');\n            \n//         })\n//       }\n\n  \n// 3TQUJ190J8IEK4637NY3\nconst [loading, setLoading] = useState(true);\n    const [movies, setMovies] = useState([]);\n    const [range,  setRange] = useState(\"\");\n    const key1 = '3e56c5d518bc82f65d4d1d16806fdd37';\n    const key2 = 'G3O5TIC12LVI911FTE84';\n    const yesterday = new Date((new Date())-86400000);\n    const lastweek = new Date((new Date())-86400000*7)\n    let targetDT1 = yesterday.getFullYear()+(yesterday.getMonth()+1).toString().padStart(2,0)+(yesterday.getDate()).toString().padStart(2,0);\n    let targetDT2 = lastweek.getFullYear()+(lastweek.getMonth()+1).toString().padStart(2,0)+(lastweek.getDate()).toString().padStart(2,0);\nuseEffect(() => {\n    const getMovies = async (movie) => {\n        const json = await (\n            await fetch(\n                `http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&detail=Y&title=${movie.movieNm}&releaseDts=${movie.openDt.replaceAll(\"-\",\"\")}&ServiceKey=${key2}`\n            )\n        ).json();\n        return {\n            \"title\": movie.movieNm,\n            \"rnum\": movie.rnum,\n            \"rank\": movie.rank,\n            \"openDt\": movie.openDt,\n            \"audiCnt\": movie.audiCnt,\n            \"audiAcc\": movie.audiCnt,\n            \"posters\":json.Data[0].Result[0].posters,\n            \"kmdbURL\":json.Data[0].Result[0].kmdbUrl};\n    }\n    const getBoxOffice = async() => {\n        const response = await(await (\n            await fetch(\n                apiType === \"Daily\" ? `https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${key1}&targetDt=${targetDT1}` : `https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchWeeklyBoxOfficeList.json?key=${key1}&weekGb=0&targetDt=${targetDT2}` \n                \n            )\n        ).json()).boxOfficeResult;\n        setRange(response.showRange);\n        const boxOffice = apiType === \"Daily\" ? await(response.dailyBoxOfficeList.map((movie) => getMovies(movie))) : await(response.weeklyBoxOfficeList.map((movie) => getMovies(movie)));\n        await Promise.all(boxOffice).then((result) => {\n            setMovies(result);\n            setLoading(false);\n        }).catch();\n    }\n    getBoxOffice();\n}, [targetDT1, targetDT2, apiType]);\n\n// useEffect(() => {\n//     const getMovies = async (movie) => {\n//         const json = await (\n//             await fetch(\n//                 `/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&detail=Y&title=${movie.movieNm}&releaseDts=${movie.openDt.replaceAll(\"-\",\"\")}&ServiceKey=3TQUJ190J8IEK4637NY3`\n//             )\n//         ).json();\n//         return {\n//             \"title\": movie.movieNm,\n//             \"rank\": movie.rank,\n//             \"openDt\": movie.openDt,\n//             \"audiCnt\": movie.audiCnt,\n//             \"audiAcc\": movie.audiCnt,\n//             \"posters\":json.Data[0].Result[0].posters,\n//             \"kmdbURL\":json.Data[0].Result[0].kmdbUrl\n//         };\n        \n//     }\n//     const getBoxOffice = async() => {\n//         const response = await(await (\n//             await fetch(\n//                 `https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`\n//             )\n//         ).json()).boxOfficeResult.dailyBoxOfficeList;\n//         setData(response);\n//         const boxOffice = await(response.map((movie) => getMovies(movie)));\n//         await Promise.all(boxOffice).then((result) => {\n//             console.log(result);\n//             console.log(boxOffice);\n            \n//         });\n//     }\n//     getBoxOffice();\n// }, []);\n//   useEffect(() => {\n//     const getMovies = async () => {\n//       try {\n//         const response = await axios.get(\n//           `http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`\n//         );\n//         console.log(response.data.boxOfficeResult.dailyBoxOfficeList);\n//         setData(response.data.boxOfficeResult.dailyBoxOfficeList);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     };\n//     getMovies();\n//   }, []);\n\n    return (\n    <div class=\"px-[40px] pt-[25px] grid grid-cols-5 gap-10\">\n        {data.map((item)=>(\n                <div class=\"w-fit\">\n                    <img  src={item.posters.split(\"|\")[0]}  alt=\"\"></img>\n                    <p >{item.movieNm}</p>\n                    <p>{item.openDt}</p>\n                    <p>★ 8.5</p>\n                </div>\n        ))}\n                \n        \n    </div>\n    )\n}\n// export default React.memo(Lists);"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Dia/Desktop/favielist/src/Lists.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, React } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists() {\n  _s();\n\n  const KEY = 'ac733e4361119585d5f69a529226d016';\n  const targetDate = '20220917';\n  const [data, setData] = useState([]);\n\n  const getSearchMovie = title => {\n    const res = axios.get('/v1/search/movie.json', {\n      params: {\n        query: `title`\n      },\n      headers: {\n        'X-Naver-Client-Id': \"rkuFsJw7BejTzImF1dlV\",\n        'X-Naver-Client-Secret': \"vjda43t2Pd\"\n      }\n    });\n    console.log(res);\n  };\n\n  const optionTopRate = {\n    url: 'https://api.themoviedb.org/3/movie/top_rated',\n    method: 'GET',\n    params: {\n      api_key: 'My',\n      language: 'ko-KR'\n    },\n    responseType: 'json'\n  };\n  let resultList = [];\n\n  const now = () => {\n    axios(optionNow).then(function (response) {\n      let results = response.data.results;\n      results.map(result => {\n        let newList = {\n          id: `${result.id}`,\n          //유니크한 값을 표현하기 위해\n          title: `${result.title}`,\n          posterPath: `${result.poster_path}`,\n          releaseDate: `${result.release_date}`,\n          average: `${result.vote_average}`,\n          popularity: `${result.popularity}`,\n          language: `${result.original_language}`\n        };\n        console.log(newList);\n        resultList.push(newList);\n      });\n      console.log(resultList);\n    }).catch(function () {\n      alert('Fail to Loading..');\n    }).finally(function () {\n      alert('Done!');\n      console.log(movieList);\n      console.log(resultList);\n      setMovieList(resultList); // movieList.map((movie)=>{\n      //   console.log(movie.title);\n      // })\n    });\n  };\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const response = await axios.get(`http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`);\n        console.log(response.data.boxOfficeResult.dailyBoxOfficeList);\n        setData(response.data.boxOfficeResult.dailyBoxOfficeList);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"px-[40px] pt-[25px] grid grid-cols-5 gap-10\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"w-fit\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://ssl.pstatic.net/imgmovie/mdi/mit110/1941/194196_P130_180925.jpg\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: getSearchMovie(item.movieNm),\n        children: item.movieNm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.openDt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2605 8.5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n} // export default React.memo(Lists);\n\n_s(Lists, \"FTfFkLfVdcj0Uk2EahF49AUIgmY=\");\n\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["useEffect","useState","React","axios","Lists","KEY","targetDate","data","setData","getSearchMovie","title","res","get","params","query","headers","console","log","optionTopRate","url","method","api_key","language","responseType","resultList","now","optionNow","then","response","results","map","result","newList","id","posterPath","poster_path","releaseDate","release_date","average","vote_average","popularity","original_language","push","catch","alert","finally","movieList","setMovieList","getMovies","boxOfficeResult","dailyBoxOfficeList","e","item","movieNm","openDt"],"sources":["/Users/Dia/Desktop/favielist/src/Lists.js"],"sourcesContent":["import { useEffect,useState, React  } from 'react';\nimport axios from 'axios';\n\n\nexport default function Lists() {\n    const KEY = 'ac733e4361119585d5f69a529226d016';\n    const targetDate = '20220917';\n    const[data,setData]=useState([]);\n  \n  \n    const getSearchMovie = (title) => {\n        const res=axios.get('/v1/search/movie.json',{\n            params:{\n                query: `title`\n            },\n            headers: {\n                'X-Naver-Client-Id': \"rkuFsJw7BejTzImF1dlV\",\n                'X-Naver-Client-Secret': \"vjda43t2Pd\"\n            }\n        })\n        console.log(res);\n    }\n    const optionTopRate = {\n\n        url:'https://api.themoviedb.org/3/movie/top_rated',\n        method:'GET',\n        params:{api_key:'My',\n                language:'ko-KR'},\n        responseType:'json'\n    \n      }\n    \n      let resultList = [];\n    \n      const now = () =>{\n        \n        axios(optionNow)\n        .then(function(response){\n          let results = response.data.results;\n    \n          results.map((result)=>{\n            let newList = {\n              id: `${result.id}`,//유니크한 값을 표현하기 위해\n              title: `${result.title}`,\n              posterPath:`${result.poster_path}`,\n              releaseDate:`${result.release_date}`,\n              average:`${result.vote_average}`,\n              popularity: `${result.popularity}`,\n              language:`${result.original_language}`        \n            }\n            console.log(newList);\n            resultList.push(newList);\n          })\n    \n          console.log(resultList);\n          \n          \n        })\n        .catch(function(){\n          alert('Fail to Loading..');\n        })\n        .finally(function(){\n          alert('Done!');\n          console.log(movieList);\n          \n          console.log(resultList);\n          setMovieList(resultList); \n          // movieList.map((movie)=>{\n          //   console.log(movie.title);\n          // })\n        })\n      }\n\n  \n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const response = await axios.get(\n          `http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`\n        );\n        console.log(response.data.boxOfficeResult.dailyBoxOfficeList);\n        setData(response.data.boxOfficeResult.dailyBoxOfficeList);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getMovies();\n  }, []);\n\n    return (\n    <div class=\"px-[40px] pt-[25px] grid grid-cols-5 gap-10\">\n        {data.map((item)=>(\n                <div class=\"w-fit\">\n                    <img src='https://ssl.pstatic.net/imgmovie/mdi/mit110/1941/194196_P130_180925.jpg' alt=\"\"></img>\n                    <p onClick={getSearchMovie(item.movieNm)}>{item.movieNm}</p>\n                    <p>{item.openDt}</p>\n                    <p>★ 8.5</p>\n                </div>\n        ))}\n                \n        \n    </div>\n    )\n}\n// export default React.memo(Lists);"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Dia/Desktop/favielist/src/Lists.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, React, useState } from 'react';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists(_ref) {\n  _s();\n\n  let {\n    data,\n    setData,\n    user\n  } = _ref;\n  const KEY = 'ac733e4361119585d5f69a529226d016';\n  var today = new Date();\n  var yesterday = new Date(today.setDate(today.getDate() - 7));\n  let targetDT = yesterday.getFullYear() + (yesterday.getMonth() + 1).toString().padStart(2, 0) + yesterday.getDate().toString().padStart(2, 0);\n  const [active, setSactive] = useState(false);\n  useEffect(() => {\n    const getMovies = async movie => {\n      const json = await (await fetch(`/v1/search/movie.json?query=${movie.movieNm}`, {\n        method: 'GET',\n        headers: {\n          \"X-Naver-Client-Id\": \"rkuFsJw7BejTzImF1dlV\",\n          \"X-Naver-Client-Secret\": \"vjda43t2Pd\"\n        }\n      })).json();\n      return {\n        \"rank\": movie.rank,\n        \"poster\": json.items[0].image,\n        \"movieCd\": movie.movieCd,\n        \"title\": movie.movieNm,\n        \"subtitle\": json.items[0].subtitle,\n        \"openDt\": movie.openDt.replaceAll(\"-\", \".\"),\n        \"audiAcc\": movie.audiAcc,\n        \"rating\": json.items[0].userRating,\n        \"like\": false\n      };\n    };\n\n    const getBoxOffice = async () => {\n      const response = await (await (await fetch(`https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDT}`)).json()).boxOfficeResult.dailyBoxOfficeList;\n      console.log(response); //console.log(data);\n\n      const boxOffice = response.map(movie => getMovies(movie));\n      await Promise.all(boxOffice).then(result => {\n        //console.log(result);\n        setData(result);\n      });\n    };\n\n    getBoxOffice();\n  }, [targetDT]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-[10rem] pt-[5px] pb-[20px]\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(List, {\n        item: item,\n        data: data,\n        setData: setData,\n        user: user,\n        active: active,\n        setS: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Lists, \"RyRAFezO8pYw+nzjLeUSe9mjnak=\");\n\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["useEffect","React","useState","List","Lists","data","setData","user","KEY","today","Date","yesterday","setDate","getDate","targetDT","getFullYear","getMonth","toString","padStart","active","setSactive","getMovies","movie","json","fetch","movieNm","method","headers","rank","items","image","movieCd","subtitle","openDt","replaceAll","audiAcc","userRating","getBoxOffice","response","boxOfficeResult","dailyBoxOfficeList","console","log","boxOffice","map","Promise","all","then","result","item"],"sources":["/Users/Dia/Desktop/favielist/src/Lists.js"],"sourcesContent":["import { useEffect, React, useState } from 'react';\nimport List from './List';\n\n\nexport default function Lists({data,setData,user}) {\n    const KEY = 'ac733e4361119585d5f69a529226d016';\n    var today = new Date();\n    var yesterday = new Date(today.setDate(today.getDate() - 7));\n    let targetDT = yesterday.getFullYear()+(yesterday.getMonth()+1).toString().padStart(2,0)+(yesterday.getDate()).toString().padStart(2,0);\n   const [active, setSactive] = useState(false);\n    useEffect(() => {\n        const getMovies = async(movie) => {\n            const json = await (\n                await fetch(`/v1/search/movie.json?query=${movie.movieNm}`, {\n                    method: 'GET',\n                    headers: {\n                        \"X-Naver-Client-Id\":\"rkuFsJw7BejTzImF1dlV\",\n                        \"X-Naver-Client-Secret\":\"vjda43t2Pd\"\n                    }\n                })\n            ).json();\n            return {\n                \"rank\":movie.rank,\n                \"poster\":json.items[0].image,\n                \"movieCd\":movie.movieCd,\n                \"title\":movie.movieNm,\n                \"subtitle\":json.items[0].subtitle,   \n                \"openDt\":movie.openDt.replaceAll(\"-\",\".\"),\n                \"audiAcc\":movie.audiAcc,\n                \"rating\":json.items[0].userRating,\n                \"like\":false   \n            }\n        }\n        const getBoxOffice = async() => {\n            const response = await(await (\n                await fetch(\n                    `https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDT}`\n                )\n            ).json()).boxOfficeResult.dailyBoxOfficeList;\n            console.log(response);\n            //console.log(data);\n            const boxOffice = response.map((movie) => getMovies(movie));\n            \n            await Promise.all(boxOffice).then((result) => {\n                //console.log(result);\n                setData(result);\n            });\n        }\n        getBoxOffice();\n    }, [targetDT]);\n\n    \n\n    return (\n    <div className=\"px-[10rem] pt-[5px] pb-[20px]\">\n        <ul>\n            {data.map((item)=>(\n            <List item={item} data={data} setData={setData} user={user} active={active} setS></List>\n            ))}\n        </ul>\n    </div>\n    )\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,eAAe,SAASC,KAAT,OAAoC;EAAA;;EAAA,IAArB;IAACC,IAAD;IAAMC,OAAN;IAAcC;EAAd,CAAqB;EAC/C,MAAMC,GAAG,GAAG,kCAAZ;EACA,IAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;EACA,IAAIC,SAAS,GAAG,IAAID,IAAJ,CAASD,KAAK,CAACG,OAAN,CAAcH,KAAK,CAACI,OAAN,KAAkB,CAAhC,CAAT,CAAhB;EACA,IAAIC,QAAQ,GAAGH,SAAS,CAACI,WAAV,KAAwB,CAACJ,SAAS,CAACK,QAAV,KAAqB,CAAtB,EAAyBC,QAAzB,GAAoCC,QAApC,CAA6C,CAA7C,EAA+C,CAA/C,CAAxB,GAA2EP,SAAS,CAACE,OAAV,EAAD,CAAsBI,QAAtB,GAAiCC,QAAjC,CAA0C,CAA1C,EAA4C,CAA5C,CAAzF;EACD,MAAM,CAACC,MAAD,EAASC,UAAT,IAAuBlB,QAAQ,CAAC,KAAD,CAArC;EACCF,SAAS,CAAC,MAAM;IACZ,MAAMqB,SAAS,GAAG,MAAMC,KAAN,IAAgB;MAC9B,MAAMC,IAAI,GAAG,MAAM,CACf,MAAMC,KAAK,CAAE,+BAA8BF,KAAK,CAACG,OAAQ,EAA9C,EAAiD;QACxDC,MAAM,EAAE,KADgD;QAExDC,OAAO,EAAE;UACL,qBAAoB,sBADf;UAEL,yBAAwB;QAFnB;MAF+C,CAAjD,CADI,EAQjBJ,IARiB,EAAnB;MASA,OAAO;QACH,QAAOD,KAAK,CAACM,IADV;QAEH,UAASL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcC,KAFpB;QAGH,WAAUR,KAAK,CAACS,OAHb;QAIH,SAAQT,KAAK,CAACG,OAJX;QAKH,YAAWF,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcG,QALtB;QAMH,UAASV,KAAK,CAACW,MAAN,CAAaC,UAAb,CAAwB,GAAxB,EAA4B,GAA5B,CANN;QAOH,WAAUZ,KAAK,CAACa,OAPb;QAQH,UAASZ,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcO,UARpB;QASH,QAAO;MATJ,CAAP;IAWH,CArBD;;IAsBA,MAAMC,YAAY,GAAG,YAAW;MAC5B,MAAMC,QAAQ,GAAG,MAAK,CAAC,MAAM,CACzB,MAAMd,KAAK,CACN,gGAA+FhB,GAAI,aAAYM,QAAS,EADlH,CADc,EAI3BS,IAJ2B,EAAP,EAIZgB,eAJY,CAIIC,kBAJ1B;MAKAC,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAN4B,CAO5B;;MACA,MAAMK,SAAS,GAAGL,QAAQ,CAACM,GAAT,CAActB,KAAD,IAAWD,SAAS,CAACC,KAAD,CAAjC,CAAlB;MAEA,MAAMuB,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuBI,IAAvB,CAA6BC,MAAD,IAAY;QAC1C;QACA1C,OAAO,CAAC0C,MAAD,CAAP;MACH,CAHK,CAAN;IAIH,CAdD;;IAeAX,YAAY;EACf,CAvCQ,EAuCN,CAACvB,QAAD,CAvCM,CAAT;EA2CA,oBACA;IAAK,SAAS,EAAC,+BAAf;IAAA,uBACI;MAAA,UACKT,IAAI,CAACuC,GAAL,CAAUK,IAAD,iBACV,QAAC,IAAD;QAAM,IAAI,EAAEA,IAAZ;QAAkB,IAAI,EAAE5C,IAAxB;QAA8B,OAAO,EAAEC,OAAvC;QAAgD,IAAI,EAAEC,IAAtD;QAA4D,MAAM,EAAEY,MAApE;QAA4E,IAAI;MAAhF;QAAA;QAAA;QAAA;MAAA,QADC;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADA;AASH;;GA1DuBf,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Dia/Desktop/favielist/src/Lists.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useEffect, useState, componentDidMount } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists() {\n  _s();\n\n  const KEY = 'ac733e4361119585d5f69a529226d016';\n  const targetDate = '20220917'; //const ID_KEY = 'rkuFsJw7BejTzImF1dlV';\n  //const SECRET_KEY = 'vjda43t2Pd';\n\n  const [data, setData] = useState(''); //const [movieList,setMovieList]= useState([  ]);\n  //let resultList = [];\n\n  useEffect(() => {\n    axios.get(`http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`).then(res => setData(res.data.boxOfficeResult.dailyBoxOfficeList));\n    console.log(data);\n  }, []);\n  /*\n  \n  movieNm: \"공조2: 인터내셔날\"\n  openDt: \"2022-09-07\"\n  rank: \"1\"\n  const posterImg = {\n  \n          url:'/v1/search/movie.json',\n          method:'GET',\n          params:{\n              query:`한산:용의 출현`\n          },\n          headers: {\n            'X-Naver-Client-Id': ID_KEY,\n            'X-Naver-Client-Secret': SECRET_KEY\n          },\n          responseType:'json'\n      \n        }\n  \n        const getPosterImg = () =>{\n      \n          axios(posterImg)\n          .then(function(response){\n            let results = response.data.results;\n      \n            results.map((result)=>{\n              let newList = {\n                id: `${result.id}`,//유니크한 값을 표현하기 위해\n                title: `${result.title}`,\n                posterPath:`${result.poster_path}`,\n                releaseDate:`${result.release_date}`,\n                average:`${result.vote_average}`,\n                popularity: `${result.popularity}`,\n                language:`${result.original_language}`        \n              }\n              console.log(newList);\n              resultList.push(newList);\n            })\n      \n            console.log(resultList);\n            \n            \n          })\n          .catch(function(){\n            alert('Fail to Loading..');\n          })\n          .finally(function(){\n            alert('Done!');\n            console.log(movieList);\n            \n            console.log(resultList);\n            setMovieList(resultList); \n            // movieList.map((movie)=>{\n            //   console.log(movie.title);\n            // })\n          })\n        }\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"px-[40px] pt-[25px] grid grid-cols-5 gap-10\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Lists, \"VZqd8eS65aqgHhr94QvD8B0VC/4=\");\n\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["React","axios","useEffect","useState","componentDidMount","Lists","KEY","targetDate","data","setData","get","then","res","boxOfficeResult","dailyBoxOfficeList","console","log"],"sources":["/Users/Dia/Desktop/favielist/src/Lists.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport { useEffect, useState,componentDidMount } from 'react';\nexport default function Lists() {\n    \n    const KEY = 'ac733e4361119585d5f69a529226d016';\n    const targetDate = '20220917';\n    //const ID_KEY = 'rkuFsJw7BejTzImF1dlV';\n    //const SECRET_KEY = 'vjda43t2Pd';\n    const [data, setData] = useState('');\n    //const [movieList,setMovieList]= useState([  ]);\n    //let resultList = [];\n\n    useEffect(()=>{\n        axios.get(`http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`)\n        .then(res=>setData(res.data.boxOfficeResult.dailyBoxOfficeList))\n        console.log(data);\n    },[]);\n    \n\n    \n/*\n\nmovieNm: \"공조2: 인터내셔날\"\nopenDt: \"2022-09-07\"\nrank: \"1\"\nconst posterImg = {\n\n        url:'/v1/search/movie.json',\n        method:'GET',\n        params:{\n            query:`한산:용의 출현`\n        },\n        headers: {\n          'X-Naver-Client-Id': ID_KEY,\n          'X-Naver-Client-Secret': SECRET_KEY\n        },\n        responseType:'json'\n    \n      }\n\n      const getPosterImg = () =>{\n    \n        axios(posterImg)\n        .then(function(response){\n          let results = response.data.results;\n    \n          results.map((result)=>{\n            let newList = {\n              id: `${result.id}`,//유니크한 값을 표현하기 위해\n              title: `${result.title}`,\n              posterPath:`${result.poster_path}`,\n              releaseDate:`${result.release_date}`,\n              average:`${result.vote_average}`,\n              popularity: `${result.popularity}`,\n              language:`${result.original_language}`        \n            }\n            console.log(newList);\n            resultList.push(newList);\n          })\n    \n          console.log(resultList);\n          \n          \n        })\n        .catch(function(){\n          alert('Fail to Loading..');\n        })\n        .finally(function(){\n          alert('Done!');\n          console.log(movieList);\n          \n          console.log(resultList);\n          setMovieList(resultList); \n          // movieList.map((movie)=>{\n          //   console.log(movie.title);\n          // })\n        })\n      }\n*/\n      \n  return (\n    <div class=\"px-[40px] pt-[25px] grid grid-cols-5 gap-10\">\n        \n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA6BC,iBAA7B,QAAsD,OAAtD;;AACA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAE5B,MAAMC,GAAG,GAAG,kCAAZ;EACA,MAAMC,UAAU,GAAG,UAAnB,CAH4B,CAI5B;EACA;;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAN4B,CAO5B;EACA;;EAEAD,SAAS,CAAC,MAAI;IACVD,KAAK,CAACS,GAAN,CAAW,mGAAkGJ,GAAI,aAAYC,UAAW,EAAxI,EACCI,IADD,CACMC,GAAG,IAAEH,OAAO,CAACG,GAAG,CAACJ,IAAJ,CAASK,eAAT,CAAyBC,kBAA1B,CADlB;IAEAC,OAAO,CAACC,GAAR,CAAYR,IAAZ;EACH,CAJQ,EAIP,EAJO,CAAT;EAQJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACE;IAAK,KAAK,EAAC;EAAX;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAnFuBH,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Dia/Desktop/favielist/src/Lists.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, React } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists() {\n  _s();\n\n  const KEY = 'ac733e4361119585d5f69a529226d016';\n  const targetDate = '20220917';\n  const [data, setData] = useState([]); //     const getPosterImg = (title) =>{\n  //         const posterImg = {\n  //             url:'/v1/search/movie.json',\n  //             method:'GET',\n  //             params:{\n  //                 query: `${title}`\n  //             },\n  //             headers: {\n  //                 'X-Naver-Client-Id': \"rkuFsJw7BejTzImF1dlV\",\n  //                 'X-Naver-Client-Secret': \"vjda43t2Pd\"\n  //             }\n  //         }\n  //         axios(posterImg)\n  //         .then(function(response){\n  //             let results = response.data.items[0].image;\n  //             return results;   \n  //         })\n  //         .catch(function(){\n  //             console.log('Fail to Loading..');\n  //         })\n  //         .finally(function(){\n  //             console.log('Done!');\n  //         })\n  //       }\n  // 3TQUJ190J8IEK4637NY3\n\n  useEffect(() => {\n    const getMovies = async movie => {\n      const json = await (await fetch(`http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&detail=Y&title=${movie.movieNm}&releaseDts=${movie.openDt.replaceAll(\"-\", \"\")}&ServiceKey=3TQUJ190J8IEK4637NY3`)).json();\n      return {\n        \"title\": movie.movieNm,\n        \"rank\": movie.rank,\n        \"openDt\": movie.openDt,\n        \"audiCnt\": movie.audiCnt,\n        \"audiAcc\": movie.audiCnt,\n        \"posters\": json.Data[0].Result[0].posters,\n        \"kmdbURL\": json.Data[0].Result[0].kmdbUrl\n      };\n    };\n\n    const getBoxOffice = async () => {\n      const response = await (await (await fetch(`https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`)).json()).boxOfficeResult.dailyBoxOfficeList;\n      const boxOffice = await response.map(movie => getMovies(movie));\n      await Promise.all(boxOffice).then(result => {\n        console.log(result);\n      });\n    };\n\n    getBoxOffice();\n  }, []);\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const response = await axios.get(`http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`);\n        console.log(response.data.boxOfficeResult.dailyBoxOfficeList);\n        setData(response.data.boxOfficeResult.dailyBoxOfficeList);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"px-[40px] pt-[25px] grid grid-cols-5 gap-10\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"w-fit\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getPosterImg(item.movieNm),\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.movieNm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.openDt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2605 8.5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n} // export default React.memo(Lists);\n\n_s(Lists, \"Gorwq0J2xYThgcskXDSejYY7S2A=\");\n\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["useEffect","useState","React","axios","Lists","KEY","targetDate","data","setData","getMovies","movie","json","fetch","movieNm","openDt","replaceAll","rank","audiCnt","Data","Result","posters","kmdbUrl","getBoxOffice","response","boxOfficeResult","dailyBoxOfficeList","boxOffice","map","Promise","all","then","result","console","log","get","e","item","getPosterImg"],"sources":["/Users/Dia/Desktop/favielist/src/Lists.js"],"sourcesContent":["import { useEffect,useState, React  } from 'react';\nimport axios from 'axios';\n\n\nexport default function Lists() {\n    const KEY = 'ac733e4361119585d5f69a529226d016';\n    const targetDate = '20220917';\n    const[data,setData]=useState([]);\n  \n//     const getPosterImg = (title) =>{\n//         const posterImg = {\n//             url:'/v1/search/movie.json',\n//             method:'GET',\n//             params:{\n//                 query: `${title}`\n//             },\n//             headers: {\n//                 'X-Naver-Client-Id': \"rkuFsJw7BejTzImF1dlV\",\n//                 'X-Naver-Client-Secret': \"vjda43t2Pd\"\n//             }\n//         }\n//         axios(posterImg)\n//         .then(function(response){\n//             let results = response.data.items[0].image;\n//             return results;   \n//         })\n//         .catch(function(){\n//             console.log('Fail to Loading..');\n//         })\n//         .finally(function(){\n//             console.log('Done!');\n            \n//         })\n//       }\n\n  \n// 3TQUJ190J8IEK4637NY3\n\n\n\nuseEffect(() => {\n    const getMovies = async (movie) => {\n        const json = await (\n            await fetch(\n                `http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&detail=Y&title=${movie.movieNm}&releaseDts=${movie.openDt.replaceAll(\"-\",\"\")}&ServiceKey=3TQUJ190J8IEK4637NY3`\n            )\n        ).json();\n        return {\n            \"title\": movie.movieNm,\n            \"rank\": movie.rank,\n            \"openDt\": movie.openDt,\n            \"audiCnt\": movie.audiCnt,\n            \"audiAcc\": movie.audiCnt,\n            \"posters\":json.Data[0].Result[0].posters,\n            \"kmdbURL\":json.Data[0].Result[0].kmdbUrl};\n    }\n    const getBoxOffice = async() => {\n        const response = await(await (\n            await fetch(\n                `https://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`\n            )\n        ).json()).boxOfficeResult.dailyBoxOfficeList;\n        const boxOffice = await(response.map((movie) => getMovies(movie)));\n        await Promise.all(boxOffice).then((result) => {\n            console.log(result);\n            \n        });\n    }\n    getBoxOffice();\n}, []);\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const response = await axios.get(\n          `http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=${KEY}&targetDt=${targetDate}`\n        );\n        console.log(response.data.boxOfficeResult.dailyBoxOfficeList);\n        setData(response.data.boxOfficeResult.dailyBoxOfficeList);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getMovies();\n  }, []);\n\n    return (\n    <div class=\"px-[40px] pt-[25px] grid grid-cols-5 gap-10\">\n        {data.map((item)=>(\n                <div class=\"w-fit\">\n                    <img src={getPosterImg(item.movieNm)} alt=\"\"></img>\n                    <p >{item.movieNm}</p>\n                    <p>{item.openDt}</p>\n                    <p>â˜… 8.5</p>\n                </div>\n        ))}\n                \n        \n    </div>\n    )\n}\n// export default React.memo(Lists);"],"mappings":"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"},"metadata":{},"sourceType":"module"}